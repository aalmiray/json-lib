/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2006-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'java-library'
}

config {
    clirr {
//        enabled  = false
        baseline = [project.group, project.name, project.previousVersion].join(':')
    }
}

configurations.all {
    resolutionStrategy.force 'xml-apis:xml-apis:2.0.2',
        "org.apache.commons:commons-lang3:$commonsLangVersion",
        "org.slf4j:slf4j-api:$slf4jVersion",
        "junit:junit:$junitVersion",
        "commons-beanutils:commons-beanutils:$commonsBeanutilsVersion",
        "org.slf4j:jcl-over-slf4j:$slf4jVersion"
}

dependencies {
    def compileExcludingCommonsLogging = { String dependency ->
        compile(dependency)  {
            exclude group: 'commons-logging', module: 'commons-logging'
        }
    }

    def testCompileExcludingCommonsLogging = { String dependency ->
        testCompile(dependency)  {
            exclude group: 'commons-logging', module: 'commons-logging'
        }
    }

    compile("junit:junit:$junitVersion")
    compileExcludingCommonsLogging("commons-beanutils:commons-beanutils:$commonsBeanutilsVersion")
    compileExcludingCommonsLogging('org.apache.commons:commons-collections4:4.4')
    compileExcludingCommonsLogging("org.apache.commons:commons-lang3:$commonsLangVersion")

    compile("org.slf4j:slf4j-api:$slf4jVersion")
    compile("org.slf4j:jcl-over-slf4j:$slf4jVersion")  {
        exclude group: 'org.slf4j', module: 'slf4j-compile'
    }

    // the following should be marked as optional
    compileExcludingCommonsLogging('xom:xom:1.3.2')
    compileExcludingCommonsLogging('org.kordamp.ezmorph:ezmorph-core:3.0.0')

    testCompileExcludingCommonsLogging('xmlunit:xmlunit:1.6')
    testCompile('uk.org.lidalia:slf4j-test:1.2.0')
}
